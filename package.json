cat > package.json <<'EOF'
{
  "name": "edublog-api",
  "version": "1.0.0",
  "type": "module",
  "private": true,
  "main": "src/server.js",
  "scripts": {
    "start": "node src/server.js",
    "migrate": "node src/migrate.js",
    "seed": "node src/seed.js",
    "test": "NODE_OPTIONS=--experimental-vm-modules jest --runInBand",
    "test:ci": "NODE_OPTIONS=--experimental-vm-modules jest --runInBand --coverage"
  },
  "dependencies": {
    "better-sqlite3": "^9.4.5",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0"
  },
  "devDependencies": {
    "jest": "^29.7.0",
    "supertest": "^7.1.3"
  }
}
EOF

cat > jest.config.js <<'EOF'
export default {
  testEnvironment: 'node',
  transform: {},
  extensionsToTreatAsEsm: ['.js']
};
EOF

mkdir -p tests

cat > tests/health.test.js <<'EOF'
import request from 'supertest';
import app from '../src/app.js';

test('GET / health', async () => {
  const res = await request(app).get('/');
  expect(res.status).toBe(200);
  expect(res.body).toHaveProperty('service', 'edublog-api');
});
EOF

cat > tests/posts.e2e.test.js <<'EOF'
import request from 'supertest';

let app;
beforeAll(async () => {
  process.env.DB_FILE = ':memory:';      // usa DB em memÃ³ria nos testes
  ({ default: app } = await import('../src/app.js'));
  await import('../src/migrate.js');     // cria tabela
});

test('POST/GET /posts', async () => {
  const create = await request(app)
    .post('/posts')
    .send({ title: 'Primeiro', description: 'demo', content: 'oi', authorName: 'Prof' });
  expect(create.status).toBe(201);
  expect(create.body).toHaveProperty('id');

  const list = await request(app).get('/posts');
  expect(list.status).toBe(200);
  expect(Array.isArray(list.body)).toBe(true);
  expect(list.body.length).toBeGreaterThanOrEqual(1);
});
EOF
